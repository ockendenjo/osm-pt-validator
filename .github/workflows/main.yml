name: "main"

on:
  pull_request: {}
  push:
    branches: [ main ]

jobs:
  test:
    name: test
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go
        timeout-minutes: 1
        uses: actions/setup-go@v5
        with:
          go-version: "1.22.1"

      - name: Run tests
        run: make test

  build:
    name: build
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go
        timeout-minutes: 1
        uses: actions/setup-go@v5
        with:
          go-version: "1.22.1"

      - name: Build commands
        run: make build

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: build

  validate:
    name: validate
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Install JSON validator
        run: |
          wget https://github.com/neilpa/yajsv/releases/download/v1.4.0/yajsv.linux.amd64
          chmod +x ./yajsv.linux.amd64

      - name: Validate routes JSON
        run: |
          find ./routes/ -type f -name "*.json" -print0 | xargs -0 -I{} ./yajsv.linux.amd64 -s schema/routefile.schema.json {}

      - name: Validate search JSON
        run: |
          ./yajsv.linux.amd64 -s schema/searchfile.schema.json search/search.json

  deploy:
    name: deploy
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    timeout-minutes: 15
    environment: prod
    needs: [build, validate, test, sast]
    permissions:
      id-token: write   # This is required for requesting the JWT
      contents: read    # This is required for actions/checkout
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Set up Go
        timeout-minutes: 1
        uses: actions/setup-go@v5
        with:
          go-version: "1.22.1"

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: build
          path: build

      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{vars.DEPLOYMENT_ROLE_ARN}}
          aws-region: eu-west-1

      - name: Install CDK
        run: npm i -g aws-cdk

      - name: CDK deploy
        run: cdk deploy --require-approval never

      - name: Sync routes
        run: aws s3 sync routes/ s3://${{vars.BUCKET_NAME}}/routes --delete

      - name: Sync searches
        run: aws s3 sync search/ s3://${{vars.BUCKET_NAME}}/search --delete

  sast:
    name: sast
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: "1.22.1"

      - name: Download Go packages
        shell: bash
        run: |
          go get ./...

      - name: Setup tools
        shell: bash
        run: |
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.56.2
          golangci-lint --version
          go install golang.org/x/vuln/cmd/govulncheck@latest
          curl -sfL https://raw.githubusercontent.com/securego/gosec/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v2.19.0
          curl -o $(go env GOPATH)/bin/nancy https://github.com/sonatype-nexus-community/nancy/releases/download/v1.0.45/nancy-v1.0.45-linux-amd64
          chmod +x $(go env GOPATH)/bin/nancy

      - name: nancy
        shell: bash
        run: |
          nancy --version
          go list -json -deps ./...
#          nancy sleuth

      - name: golangci-lint
        shell: bash
        run: |
          golangci-lint run --timeout=3m

      - name: govulncheck
        shell: bash
        run: |
          govulncheck ./...

      - name: gosec
        shell: bash
        run: |
          gosec ./...
